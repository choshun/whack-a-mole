$ease: cubic-bezier(.23, 1, .32, 1);

.app {
  transition: background-color 20s $ease;
  position: fixed;
  background-color: #fff;

  &.play,
  &.end {
    background-color: #000;
  }
}

.cube {
  $opacity: .7;
  $cube-dimension: 196px;

	transition: all 5s $ease;
  transform: translateZ( 60px );
  transform-style: preserve-3d;

  .back {
    background-color: rgba(255, 197, 0, $opacity);
    transform: rotateX( -180deg ) translateZ( 100px );
  }

  .right {
    background: rgba(199, 253, 0, $opacity);
    transition: all 5s $ease;
    transform: rotateY( 140deg ) translateZ( 100px );

    .mole {
      left: -100%;

      &.move {
        left: 500%;
      }
    }
  }

  .top {
    background-color: rgba(255, 238, 0, $opacity);
    transform: rotateX( 140deg ) translateZ( 100px );

    .mole {
      top: 100%;

      &.move {
        top: -500%;
      }
    }
  }

  .left {
    background-color: rgba(199, 253, 0, $opacity);
    transform: rotateY( -140deg ) translateZ( 100px );

    .mole {
      left: 100%;

      &.move {
        left: -500%;
      }
    }
  }

  .bottom {
    background-color: rgba(255, 238, 0, $opacity);
    transform: rotateX( -140deg ) translateZ( 100px );

    .mole {
      top: -100%;

      &.move {
        top: 500%;
      }
    }
  }

  .move {
    transition: all 4s cubic-bezier(0.88, 0.01, 0.96, 0);
    z-index: 20;
  }

  figure {
    display: block;
    font-size: 120px;
    height: $cube-dimension;
    line-height: $cube-dimension;
    margin: 0;
    position: absolute;
    text-align: center;
    transform: rotateX( -180deg ) translateZ( 13px );
    transition: all 5s $ease;
    width: $cube-dimension;
  }

	.mole,
	.mascot {
	  background-color: rgba(242, 0, 204, $opacity);
	  border: 0;
	  color: #fff;
	  cursor: default;
	  font-size: .5em;
	  font-weight: 100;
	  height: 100%;
    left: 0;
    opacity: 0;
	  margin: 0;
	  padding: 0;
	  position: absolute;
    top: 0;
    transition: all 5s cubic-bezier(0.88, 0.01, 0.96, 0);
	  width: 100%;

    .play & {
      cursor: pointer;
      opacity: 1;
    }
	}

	.mascot {
		left: 189px;

    .end & {
      opacity: 1;
    }
	}

	.mole {
	  &.scored {
	  	cursor: default;
      opacity: 0;
      transition: all 1s $ease;
	  }
	}

	.score {
		cursor: pointer;
    display: block;
		font-size: .2em;
		transform: rotate(180deg) scale(-1, 1);

    .play &,
    .end & {
      cursor: default;
    }
	}
}

.accessible {
	position: relative;
	left: -9999em;
}

.container {
	$container-dimension: 270px;

  height: $container-dimension;
  margin: 10% auto;
  position: relative;
  width: $container-dimension;
	transition: all 3s $ease;
	perspective: 10000px;
	perspective-origin: 33% 32%;

	/**
	 * cube states
	**/
	&.resting {
		transition: all 3s $ease;
		perspective: 42px;
		perspective-origin: 33% 32%;
	}
	
	&.open {
		.right {
	    transform: rotateY(160deg) translateZ(10px);
	  }

	  .top {
	    transform: rotateX( 150deg ) translateZ( 90px );
	  }

	  .left {
	    transform: rotateY( -150deg ) translateZ( 90px );
	  }

	  .bottom {
	    transform: rotateX( -140deg ) translateZ( 110px );
	  }
	}

	// 90deg angles
	&.cube-right {
	  .right {
	    transform: rotateY( 90deg ) translateZ( 100px );
	  }

	  .top {
	    transform: rotateX( 90deg ) translateZ( 100px );
	  }

	  .left {
	    transform: rotateY( -90deg ) translateZ( 100px );
	  }

	  .bottom {
	    transform: rotateX( -90deg ) translateZ( 100px );
	  }
	}

	// change figure height
	&.tall {
		perspective: 102px;

		figure {
			height: 500px;
			transition: all 15s $ease;
		}
	}

	// change figure width
	&.wide {
		figure {
			width: 350px;
			transition: all 15s $ease;
		}
	}

	&.perspective-lower-right {
		perspective: 22px;
		perspective-origin: 53% 80%;
		transition: all 8s $ease;
	}

  &.perspective-upper-right {
    perspective-origin: 23% 80%;
    transition: all 8s $ease;
  }
}